name: Windows build

on:
  push:
    branches: '*'
    tags: '*'
  pull_request:
    types: [opened, reopened, synchronize, edited]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - os: windows-latest
            qt-version: '5.15.2'
            qt-target: 'desktop'
            qt-mingw-version: 81
            mingw-version: '8.1.0'
          - os: windows-latest
            qt-version: '6.4.2'
            qt-target: 'desktop'
            qt-mingw-version: ''
            mingw-version: '11.2.0'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup environment
      run: |
        sed -i -e '/^#/d' .github/config.env
        sed -i -e '/^$/d' .github/config.env
        cat .github/config.env >> "${GITHUB_ENV}"
      shell: bash
    ## Install Qt
    # Windows
    - name: Install Qt (Windows)
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}
        host: 'windows'
        arch: 'win64_mingw${{ matrix.qt-mingw-version }}'
        target: ${{ matrix.qt-target }}
        modules: 'qtcharts'
    - if: contains(matrix.os, 'windows')
      name: Install MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
        version: ${{ matrix.mingw-version }}
    ## Build
    - name: Build
      run: .ci/windows-build.sh
      shell: bash
    - name: Windows build
      run: |
        lrelease ${{ env.app_name }}.pro || exit 2
        qmake INCLUDEPATH+=C:\OpenSSL\include LIBS+=-LC:\OpenSSL\lib || exit 3
        mingw32-make -j4 || exit 4
        mkdir release
        move ${{ env.executable_name }}.exe release/
        move *.dll release/
        cd release
        windeployqt ${{ env.executable_name }}.exe --qmldir ..\app\ui\qml || exit 5
        windeployqt opentyper-core.dll || exit 5
      shell: cmd
    - name: Finalize Windows build
      run: .ci/windows-build.sh 1
      shell: bash
    ## Package
    - name: Package
      uses: vimtor/action-zip@v1
      with:
        files: ../release/
        dest: ${{ env.app_name }}-win32.zip
    ## Upload
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-Qt-${{ matrix.qt-version }}
        path: '*.zip'

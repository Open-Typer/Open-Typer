name: Build

on:
  push:
    branches: [ master ]
    tags: '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, windows-latest, macos-latest]
        qt-version: ['5.9.5']
        qt-target: ['desktop']
        include:
          - os: windows-latest
            qt-version: '5.12.8'
            qt-target: 'desktop'
            mingw-version: 73
        exclude:
          - os: windows-latest
            qt-version: '5.9.5'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: 'Get Previous tag'
      id: previoustag
      uses: WyriHaximus/github-action-get-previous-tag@v1
    ## Install Qt
    # Windows
    - if: contains(matrix.os, 'windows')
      name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        host: 'windows'
        arch: 'win32_mingw${{ matrix.mingw-version }}'
        target: ${{ matrix.qt-target }}
        dir: '${{ github.workspace }}'
        modules: 'qtcharts'
        setup-python: 'false'
    - if: contains(matrix.os, 'windows')
      name: Install 32-bit MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: i686
    # Ubuntu
    - if: contains(matrix.os, 'ubuntu')
      name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        host: 'linux'
        target: ${{ matrix.qt-target }}
        dir: '${{ github.workspace }}'
        modules: 'qtcharts'
        setup-python: 'false'
    # MacOS
    - if: contains(matrix.os, 'macos')
      name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        host: 'mac'
        target: ${{ matrix.qt-target }}
        dir: '${{ github.workspace }}'
        modules: 'qtcharts'
        setup-python: 'false'
    ## Build
    # Windows
    - if: contains(matrix.os, 'windows')
      run: source .ci/windows-build.sh
      shell: bash
    # Ubuntu
    - if: contains(matrix.os, 'ubuntu')
      run: |
        source .ci/ubuntu-build.sh
        cp -r res/linux-release debpkg
        mkdir -p debpkg/usr/local/bin
        cp Open-Typer debpkg/usr/local/bin/open-typer
        echo "libc6_version=$(dpkg -s libc6 | grep '^Version:' | cut -d' ' -f2 | cut -d'-' -f1)" >> $GITHUB_ENV
        echo "distro=$(lsb_release -is | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "codename=$(lsb_release -cs)" >> $GITHUB_ENV
        echo "package=open-typer" >> $GITHUB_ENV
        PKG_VERSION=${{ steps.previoustag.outputs.tag }}
        echo "package_version=${PKG_VERSION//v}" >> $GITHUB_ENV
        echo "package_arch=amd64" >> $GITHUB_ENV
      shell: bash
    - if: contains(matrix.os, 'ubuntu')
      id: debpkg
      uses: jiro4989/build-deb-action@v2
      with:
        package: ${{ env.package }}
        package_root: debpkg
        maintainer: adazem009
        version: ${{ env.package_version }}
        arch: ${{ env.package_arch }}
        depends: 'libc6 (>= ${{ env.libc6_version }}), libstdc++6 (>= 5), libqt5core5a (>= ${{ matrix.qt-version }}), libqt5gui5 (>= ${{ matrix.qt-version }}), libqt5widgets5 (>= ${{ matrix.qt-version }}), libqt5network5 (>= ${{ matrix.qt-version }}), libqt5charts5 (>= ${{ matrix.qt-version }}), libqt5websockets5 (>= ${{ matrix.qt-version }}), libssl1.1 (>= 1.1.0)'
        desc: 'Free and open source typing tutor program'
    - if: contains(matrix.os, 'ubuntu')
      name: Set deb package name according to distribution
      run: 'mv ${{ steps.debpkg.outputs.file_name }} ${{ env.package }}_${{ env.package_version }}-0-${{ env.distro }}-${{ env.codename }}_${{ env.package_arch }}.deb'
    # MacOS
    - if: contains(matrix.os, 'macos')
      run: source .ci/macos-build.sh
      shell: bash
    ## Package
    # Windows
    - if: contains(matrix.os, 'windows')
      uses: vimtor/action-zip@v1
      with:
        files: release/
        dest: Open-Typer-win32.zip
    ## Upload
    # Windows
    - if: contains(matrix.os, 'windows')
      uses: actions/upload-artifact@v2
      with:
        name: build-windows
        path: |
          *.zip
          installer/*.exe
    # Ubuntu
    - if: contains(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v2
      with:
        name: build-ubuntu
        path: '*.deb'
    # MacOS
    - if: contains(matrix.os, 'macos')
      uses: actions/upload-artifact@v2
      with:
        name: build-macos
        path: '*.dmg'
  wasm-build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        qt-version: ['5.15.2']
        qt-target: ['desktop']
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    ## Install Qt
    # Ubuntu
    - if: contains(matrix.os, 'ubuntu')
      name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        host: 'linux'
        arch: 'wasm_32'
        target: ${{ matrix.qt-target }}
        dir: '${{ github.workspace }}'
        modules: 'qtcharts'
        setup-python: 'false'
    ## Install emscripten
    - uses: mymindstorm/setup-emsdk@v11
      with:
        version: 1.39.8
        actions-cache-folder: 'emsdk-cache1'
    ## Build
    - run: source .ci/common/build.sh wasm
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: build-wasm
        path: |
          *.html
          *.js
          *.wasm
          *.svg
    ## Deploy
    - run: |
        mkdir -p ../online-app-deploy
        cp *.html ../online-app-deploy/
        cp *.js ../online-app-deploy/
        cp *.wasm ../online-app-deploy/
        cp *.svg ../online-app-deploy/
    - uses: actions/checkout@v2
      with:
        ref: 'gh-pages'
    - run: |
        mv ../online-app-deploy/* ./
        git add -A
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git commit -m "online app deploy"
    - name: Push online-app
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages

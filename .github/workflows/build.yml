name: Build

on:
  push:
    branches: '*'
    tags: '*'
  pull_request:
    types: [opened, reopened, synchronize, edited]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        qt-version: ['5.15.2']
        qt-target: ['desktop']
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup environment
      run: |
        sed -i -e '/^#/d' .github/config.env
        sed -i -e '/^$/d' .github/config.env
        cat .github/config.env >> "${GITHUB_ENV}"
      shell: bash
    - name: Get OS name
      run: |
        IFS='-'
        read -a arr <<< ${{ matrix.os }}
        echo "os_name=${arr[0]}" >> "${GITHUB_ENV}"
      shell: bash
    ## Install Qt
    # MacOS
    - if: contains(matrix.os, 'macos')
      name: Install Qt (macOS)
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}
        host: 'mac'
        target: ${{ matrix.qt-target }}
        modules: 'qtcharts'
    ## Build
    - name: Build
      run: .ci/${{ env.os_name }}-build.sh
      shell: bash
    ## Package
    ## Upload
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ env.os_name }}
        path: |
          ${{ env.executable_name }}
          *.zip
          *.AppImage
          *.dmg

  # WebAssembly
  wasm-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        qt-version: ['6.4.2']
        qt-target: ['desktop']
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    # Install emscripten
    - name: Install emscripten
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 3.1.14
        actions-cache-folder: 'emsdk-cache2'
    # Install Qt
    - name: Install desktop Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}
        aqtversion: '==3.1.0'
        py7zrversion: '==0.20.2'
        host: 'linux'
        arch: 'gcc_64'
        target: ${{ matrix.qt-target }}
        modules: 'qtcharts qt5compat qtshadertools'
        set-env: false
    - name: Install WASM Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}
        aqtversion: '==3.1.0'
        py7zrversion: '==0.20.2'
        host: 'linux'
        arch: 'wasm_32'
        target: ${{ matrix.qt-target }}
        modules: 'qtcharts qt5compat qtshadertools'
    # Build
    - run: source .ci/common/build.sh wasm
      shell: bash
    - uses: actions/upload-artifact@v3
      with:
        name: build-wasm
        path: |
          *.html
          *.js
          *.wasm
          *.svg
